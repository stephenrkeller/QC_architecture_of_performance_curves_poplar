plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
par(mar=c(5.1,4.1,4.1,2.1))
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
grid()
points(x$Lon,x$Lat,col=rev(colfunc(length(x$Site))),pch=16,cex=2)
xl <- 1
yb <- 1
xr <- 1.5
yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=colfunc(10)
)
mtext(1:10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
par(mar=c(10,10,10,10))
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
x<-read.csv("20160819_GSL_sites.csv")
#w <- getData('worldclim', var='bio', res=10)
#states.shp<-readShapeSpatial("USA_adm1.shp")
colfunc<-colorRampPalette(c("blue","red"))
par(mar=c(10,10,10,10))
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
library(mapdata)
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(x$Lon,x$Lat,col=rev(colfunc(length(x$Site))),pch=16,cex=2)
legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.6)
#text(x$Lon,x$Lat-.09,labels=x$Site.name,cex=.5)
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(x$Lon,x$Lat,col=rev(colfunc(length(x$Site))),pch=16,cex=2)
legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.6)
box()
legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.7)
legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.65)
legend(-71,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
legend(-71,46,legend=c(x$Site.name,x$Non_freeze_length),pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(x$Lon,x$Lat,col=rev(colfunc(length(x$Site))),pch=16,cex=2)
legend(-71,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
colfun
colfunc
or.x<-x[order(x$Non_freeze_length),]
or.x
or.x<-x[sort(x$Non_freeze_length),]
or.x
x$Non_freeze_length
sort(x$Non_freeze_length)
class(x$Non_freeze_length)
order(x$Non_freeze_length)
or.x<-x[order(x$Non_freeze_length),]
or.x
par(mar=c(10,10,10,10))
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=rev(colfunc(length(or.x$Site))),pch=16,cex=2)
or.x$Lat
legend(-71,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
legend(-71,46,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=rev(colfunc(length(or.x$Site))),pch=16,cex=2)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
legend(-71,46,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65)
legend(-71,46,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
legend(-73,47,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
legend(-73,46.5,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
legend(-73,46.45,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
legend(-72,46.45,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
#legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.65)
legend(-72,46.45,legend=or.x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),cex=.65,title="Growing Season Length (Julian Days)")
box()
or.x$Site.name
or.x
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
#legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.65)
legend(-72,46.45,legend=or.x$Site.name,pch=16,col=colfunc(length(x$Site)),cex=.65,title="Growing Season Length (Julian Days)")
box()
text(c(-75,-73.5),c(43.5,43),labels=c("New York","Vermont"))
text(c(-75,-73.1),c(43.5,43),labels=c("New York","Vermont"))
text(c(-75,-73),c(43.5,43),labels=c("New York","Vermont"))
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
#legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.65)
legend(-72,46.45,legend=or.x$Site.name,pch=16,col=colfunc(length(x$Site)),cex=.65,title="Growing Season Length (Julian Days)")
box()
text(c(-75,-73),c(43.5,43),labels=c("New York","Vermont"))
text(c(-75,-72.0),c(43.5,43),labels=c("New York","Vermont"))
text(c(-75,-72.9),c(43.5,43),labels=c("New York","Vermont"))#text(x$Lon,x$Lat-.09,labels=x$Site.name,cex=.5)
plot(w, 1, xlim=c(-76,-70), ylim=c(43,46),col="white", axes=TRUE, legend=F,main="",box=FALSE,las=1,xlab="Latitude",ylab="Longitude")
map("worldHires",c("USA","Canada"),add=TRUE)
map("state", c('new york','vermont','new hampshire'), add = TRUE)
points(or.x$Lon,or.x$Lat,col=colfunc(length(or.x$Site)),pch=16,cex=2)
#legend(-75.9,46,legend=x$Site.name,pch=16,col=rev(colfunc(length(x$Site))),horiz=T,cex=.65)
legend(-72,46.45,legend=or.x$Site.name,pch=16,col=colfunc(length(x$Site)),cex=.65,title="Growing Season Length (Julian Days)")
box()
text(c(-75,-72.9),c(43.5,43),labels=c("New York","Vermont"))#text(x$Lon,x$Lat-.09,labels=x$Site.name,cex=.5)
b<-read.csv("Figures_related/Time_table.csv")
names(b)<-c("Task","2017","2018","2019","2020")
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
library(pander)
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
library(pander)
panderOptions("table.style", "grid")
#panderOptions("graph.grid.lty","dashed")
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
b<-read.csv("Figures_related/Time_table.csv")
names(b)<-c("Tasks and Goals","2017","2018","2019","2020")
library(pander)
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
knitr::kable(b,caption="Timetable of yearly goals")
800/2200
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
library(pander)
panderOptions("table.style", "grid")
#panderOptions("graph.grid.lty","dashed")
pandoc.table(b,split.table=Inf,style="grid",justify="left",caption="Time table of yearly goals",emphasize.strong.cols=1,keep.line.breaks = TRUE)
knitr::kable(b,caption="Timetable of yearly goals")
b<-read.csv("Figures_related/Time_table.csv")
knitr::kable(b,caption="Timetable of yearly goals")
Sessioninfo()
SessionInfo()
sessionInfo()
library(worldmaps)
library(worldmap)
library(maps)
library(raster)
x<-read.csv("Poplar_Individual_Coordinates_MASTER_all.csv")
str(x)
x<-read.csv("Poplar_Individual_Coordinates_MASTER_all.csv")
str(x)
dim(x)
dim(na.omit(x))
x2<-na.omit(x)
?getData
w<-getData('worldclim',var="bio",res=10)
d<-extract(w,x2[,c("Lon","Lat")])
head(d)
x2.clim<-data.frame(cbind(x2,d))
str(x2.clim)
pc.clim<-princomp(scale(d))
head(d)
d
scale(d)
pc.clim<-princomp(scale(d))
str(d)
pc.clim<-princomp(scale(d[1:19]))
pc.clim
d[1:19]
pc.clim<-princomp(scale(d[,1:19]))
names(x2.clim)
pc.clim<-princomp(scale(x2.clim[,11:29]))
x2.clim[,11:29]
dim(x2.clim[,11:29])
dim(na.omit(x2.clim[,11:29]))
x2.clim<-na.omit(x2.clim)
pc.clim<-princomp(scale(x2.clim[,11:29]))
pc.clim
summary(pc.clim)
pc.clim$loadings[,1:4]
plot(pc.clim)
biplot(pc.clim)
biplot(pc.clim)
plot(w,4)
plot(w,4,xlim=c(-160,-60))
plot(w,4,xlim=c(-180,-60),ylim=c(40,80))
plot(w,4,xlim=c(-170,-50),ylim=c(40,80))
plot(w,4,xlim=c(-170,-50),ylim=c(30,80))
?maps
?map
map(c("canada","usa")
)
map()
plot(w,4,xlim=c(-170,-50),ylim=c(30,80))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,80))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,80))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
pc.clim$loadings[,1:4]
names(x2.clim)
head(x2.clim[1:4,1:19])
head(x2.clim[1:4,1:10])
plot(w,4,xlim=c(-160,-50),ylim=c(20,90))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75)
map(add=TRUE)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
?sample
names(x2.clim)
sample(x2.clim$IndCode,size=50)
sample(x2.clim$IndCode,size=50)
sample(x2.clim$IndCode,size=50)
nams<-sample(x2.clim$IndCode,size=50)
names
nams
extract(x2.clim,nams)
nams<-data.frame(sample(x2.clim$IndCode,size=50))
nams
names(nams)<-"IndCode"
sub<-extract(x2.clim,nams[,"IndCode"])
str(nams)
str(x2.clim)
sub<-extract(x2.clim,nams[,"IndCode"])
names(x2.clim)
nams[,"IndCode"]
sub<-extract(x2.clim,nams[,"IndCode"])
x2.clim[x2.clim$IndCode==nams]
x2.clim[x2.clim$IndCode=nams]
nams
str(nams)
nams<-droplevels(nams)
sub<-extract(x2.clim,nams[,"IndCode"])
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
library(dplyr)
merg<-inner_join(nams,x2.clim,by=IndCode)
merg<-inner_join(nams,x2.clim,by="IndCode")
dim(merg)
dim(nams)
merg
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
x<-read.csv("Poplar_Individual_Coordinates_MASTER_nsf.csv")# nsf
str(x)
dim(x)
dim(na.omit(x))
x2<-na.omit(x)
d<-extract(w,x2[,c("Lon","Lat")])
x2.clim<-data.frame(cbind(x2,d))
str(x2.clim)
x2.clim<-na.omit(x2.clim)
#lets look at the variation in climate
pc.clim<-princomp(scale(x2.clim[,11:29]))
summary(pc.clim)
pc.clim$loadings[,1:4]
biplot(pc.clim)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
#points(x2.clim$Lon,x2.clim$Lat,pch=19)
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
x<-read.csv("Poplar_Individual_Coordinates_MASTER_nsf_noUSDA.csv")# nsf
str(x)
dim(x)
dim(na.omit(x))
x2<-na.omit(x)
#bioclim
w<-getData('worldclim',var="bio",res=10)
d<-extract(w,x2[,c("Lon","Lat")])
x2.clim<-data.frame(cbind(x2,d))
str(x2.clim)
x2.clim<-na.omit(x2.clim)
#lets look at the variation in climate
pc.clim<-princomp(scale(x2.clim[,11:29]))
summary(pc.clim)
pc.clim$loadings[,1:4]
biplot(pc.clim)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
nams<-data.frame(sample(x2.clim$IndCode,size=50))
names(nams)<-"IndCode"
nams<-droplevels(nams)
nams
set<-nams
write.csv(set,"setclones.csv")
merg<-inner_join(set,x2.clim,by="IndCode")
dim(merg)
points(merg$Lon,merg$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(merg$Lon,merg$Lat,pch=19)
g<-read.csv("phenology_IH_2015.csv")
str(g)
dim(g)
dim(na.omit(g))
text(merg$Lon,merg$Lat,label=merg$StateProv)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(merg$Lon,merg$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
#points(merg$Lon,merg$Lat,pch=19)
text(merg$Lon,merg$Lat,label=merg$StateProv)
text(merg$Lon,merg$Lat,label=merg$PopCode)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
text(merg$Lon,merg$Lat,label=merg$PopCode)
ddply(g,.(PopCode),summarize,GSL=mean(BF)-mean(BS))
library(plyr)
ddply(g,.(PopCode),summarize,GSL=mean(BF)-mean(BS))
ddply(g,.(PopCode),summarize,GSL=mean(BF)-mean(BS),na.rm)
g2<-na.omit(g)
ddply(g,.(PopCode),summarize,GSL=mean(BF)-mean(BS))
g2
ddply(g2,.(PopCode),summarize,GSL=mean(BF)-mean(BS))
ddply(g2,.(PopCode),summarize,GSL=mean(BS)-mean(BF))
GSL_site<-ddply(g2,.(PopCode),summarize,GSL=mean(BS)-mean(BF))
GSL_site$months<-GSL_site$GSL/30
GSL_site
dim(merg)
dim(GSL_site)
GSL_site
linked<-inner_join(GSL_site,merg,by="PopCode")
dim(linked)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(linked$Lon,linked$Lat,pch=19)
unique(g$PopCode)
read.file("VT_gardenMap_budflush2016.tsv")#vt
g<-read.table("VT_gardenMap_budflush2016.tsv")#vt
g<-read.table("VT_gardenMap_budflush2016.tsv")#vt
GSL_site
text(linked$Lon,linked$Lat,label=linked$PopCode)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
text(linked$Lon,linked$Lat,label=linked$PopCode)
biplot(pc.clim)
summary(pc.clim)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(x2.clim$Lon,x2.clim$Lat,pch=19)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
#points(x2.clim$Lon,x2.clim$Lat,pch=19)
text(x2.clim$Lon,x2.clim$Lat,label=x2.clim$PopCode)
g<-read.table("VT_gardenMap_budflush2016.tsv")#vt
g<-read.csv("phenology_IH_2015.csv")#indian head
str(g)
unique(g$PopCode)
dim(na.omit(g))
g2<-na.omit(g)
GSL_site<-ddply(g2,.(PopCode),summarize,GSL=mean(BS)-mean(BF))
GSL_site$months<-GSL_site$GSL/30
GSL_site
linked<-inner_join(GSL_site,merg,by="PopCode")
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
text(linked$Lon,linked$Lat,label=linked$PopCode)
dim(linked)
linke
linked
write.csv(linked,"linked.csv")
unique(g$PopCode)
write.csv(GSL_site,"GSL.csv")
unique(merg$PopCode)
dim(merg)
write.csv(merg,"merg.csv")
linked<-inner_join(GSL_site,x2.clim,by="PopCode")
dim(linked)
head(linked)
unique(linked$PopCode)
names(linked)
names(x2.clim)
x3<-ddply(x2.clim,.(PopCode),summarize,mean)
subset(x2.clim,unique(x2.clim))
unique(x2.clim)
subset(x2.clim,x2.clim$PopCode==unique(x2.clim))
unique(x2.clim)
subset(x2.clim,x2.clim$PopCode==unique(x2.clim$PopCode))
t<-subset(x2.clim,x2.clim$PopCode==unique(x2.clim$PopCode))
dim(t)
linked<-inner_join(GSL_site,x2.clim,by="PopCode")
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=.5)
plot(w,4,xlim=c(-160,-50),ylim=c(30,75))
map(add=TRUE)
points(linked$Lon,linked$Lat,pch=19,cex=.5)
plot(w,4,xlim=c(-140,-50),ylim=c(30,75))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=.5)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/2)
plot(w,4,xlim=c(-140,-50),ylim=c(30,75))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/2)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
?colorPalette
plot(w,4,xlim=c(-140,-50),ylim=c(30,75),col=colorRampPalette(c("skyblue","white"))(255))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","skyblue"))(255))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","orange","skyblue"))(255))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","orange","skyblue","gray"))(255))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","orange","skyblue","black"))(255))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","orange","skyblue"))(255))
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white","orange","skyblue"))(555))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
```
plot(w,4,xlim=c(-140,-50),ylim=c(40,65),col=colorRampPalette(c("white"))(555))
map(add=TRUE)
#points(linked$Lon,linked$Lat,pch=19)
#text(linked$Lon,linked$Lat,label=linked$PopCode)
points(linked$Lon,linked$Lat,pch=19,cex=linked$months/1.5)
170-96
74=3
74/3
74/30
range(linked$months)
GSL_site
GSL_site<-ddply(g2,.(PopCode),summarize,GSL=mean(BS)-mean(BF),BS=mean(BS),BF=mean(BF))
GSL_site$months<-GSL_site$GSL/30
GSL_site
head(g2)
203-121
GSL_site<-ddply(g2,.(PopCode),summarize,GSL=mean(BS)-mean(BF),BS=mean(BS),BF=mean(BF))
GSL_site$months<-GSL_site$GSL/30
GSL_site
knitr::kable(GSL_Site)
knitr::kable(GSL_site)
96/3
96/30
170/30
